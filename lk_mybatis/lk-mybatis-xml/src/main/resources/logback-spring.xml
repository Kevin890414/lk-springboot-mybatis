<?xml version="1.0" encoding="UTF-8"?>

        <!--  注意文件名称不是logback.xml，想使用spring扩展profile支持，要以logback-spring.xml命名-->
<configuration>
	 <!-- 定义日志的根目录 -->
    <property name="LOG_HOME" value="/app/log" />
     <!-- 定义日志级别-->
    <property name="logging.level" value="debug" />
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <Pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %logger{80} -  %msg%n</Pattern>
            <!-- immediateFlush默认值是true,意谓着所有的消息都会被立即输出。 -->
			<immediateFlush>true</immediateFlush> 
        </encoder>
    </appender>

    <!-- 按照每天生成日志文件 -->
    <appender name="ERROR-APPENDER" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <append>true</append>
        <!-- 过滤器，只记录 error 级别的日志 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>error</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <!-- 日志名称 -->
        <!-- <file>logs/common-error.log</file> -->
        <!-- 每天生成一个日志文件，保存30天的日志文件 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名:按天回滚 daily -->
            <FileNamePattern>logs/%d{yyyy-MM-dd}/common-error-%i.log
            </FileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				 <!-- 日志文件大小 -->
				<maxFileSize>50MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
            <!--日志文件保留天数-->
            <MaxHistory>30</MaxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%X{T}表示线程号,%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level  %logger{50} -  %msg%n</pattern>
            <!-- 编码 -->
            <charset>UTF-8</charset>
        </encoder>
    </appender>


    <appender name="ROOT-APPENDER" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <append>true</append>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>${logging.level}</level>
        </filter>
        <!-- 
	    <filter class="ch.qos.logback.core.filter.EvaluatorFilter">  
	      <evaluator name="bosentVal">  
	        <expression>return (logger.startsWith("com.bosent")||logger.startsWith("com.giantstone"));</expression>  
	      </evaluator>  
	      <OnMismatch>ACCEPT</OnMismatch>  
	      <OnMatch>DENY</OnMatch>  
	    </filter>        
	     -->  
        <!-- <file>logs/framework-default.log</file> -->
        <!-- 每天生成一个日志文件，保存30天的日志文件 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名:按天回滚 daily -->
            <FileNamePattern>
                logs/%d{yyyy-MM-dd}/framework-default-%i.log
            </FileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				 <!-- 日志文件大小 -->
				<maxFileSize>50MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
            <!--日志文件保留天数-->
            <MaxHistory>30</MaxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%X{T}表示线程号,%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level  %logger{50} -  %msg%n</pattern>
            <!-- 编码 -->
            <charset>UTF-8</charset>
        </encoder>
    </appender>
    
    
    <appender name="BOSENT_STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <Pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %marker %logger{80}%msg%n</Pattern>
        	<!-- immediateFlush默认值是true,意谓着所有的消息都会被立即输出。 -->
			<immediateFlush>true</immediateFlush> 
        </encoder>
    </appender>

    <logger name="com.example.demo" level="info">
    	<appender-ref ref="STDOUT" />
    	<appender-ref ref="ROOT-APPENDER"/>
        <appender-ref ref="ERROR-APPENDER"/>
    </logger>
    <logger name="com.example.demo.controllers" level="debug">
    	<appender-ref ref="STDOUT" />
    	<appender-ref ref="ROOT-APPENDER"/>
        <appender-ref ref="ERROR-APPENDER"/>
    </logger>

    <root>
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="ROOT-APPENDER"/>
        <appender-ref ref="ERROR-APPENDER"/>
    </root>

</configuration>